[{"authors":null,"categories":null,"content":"  1 Back To The Books 2 Tools For Writing Open Books on Github 2.1 Markdown 2.2 Git and Github 2.3 Putting it together: Books, authorship and contributions 2.4 Bonus: Bookdown  3 Publishing 3.1 Own website 3.2 Rstudio connect, through Bookdown 3.3 Publishers  4 Impact 4.1 Paywall 4.2 Updates and crowdsourcing  5 Wrapping it up and what’s next   1 Back To The Books Toward the end of my PhD I was struggling to learn new skills such as data analysis and programming. It was at that time that I rediscovered books (duh!) and discovered a very special kind of them, known as open books or open source books. This kind of books helped me in my professional development, so I feel particularly attached to them.\nBy now I have found three types of open source books:\n Books that are simply distributed by the author on their own website. Books that are written through wikis, known as wikibooks. Books that are written through Github.  Here I will discuss the last type, because I have the impression that Github is a powerful tool for writing books that also fits perfectly to academics.\nA disclaimer first: I come here as a beginner. My area of expertise is biology and I have never written a book about it, but I would really like to do so. Meanwhile I collected the necessary tools and some idea on why we should do it. And I would like to share them with you.\n 2 Tools For Writing Open Books on Github It all revolves around two tools: Markdown and, you have guessed it, Github.\n2.1 Markdown Markdown is a simple markup language; we can use it for annotating plain text, so that we know which part is the title, which part should be bold or italic, which part makes up paragraph, etc.\nThe most widely used markup languages are HTML and LATEX. Compared to them markdown is less versatile, but incredibly simple and easy to use.\nFor example, in markdown:\n# This is a title ## This is a subtitle This is a paragraph. This text is **bold**, and this text is *italic* This is a bullet list: - item1 - item2 [This is a link](to/your/favourite/URL) etc.\nA big chunk of the web, for example this blog and many others, is written in Markdown.\nOnce you have written markdown text what can you do with it?\nMarkdown is a universal source that can be easily converted into nicely formatted docx and pdf, but also into HTML and epub/mobi. You can convert any markdown file into any of those formats with pandoc , no edits required.\nSince a markdown file is plain text, you can open it on any computer and any platform, you just need a text editor (I generally use atom). It is not even worth mentioning that pandoc and atom are open source.\nAlso, since markdown is plain text, it can be tracked with Git and hosted on Github. (if you already know what they are, skip the next section)\n 2.2 Git and Github Git is a version control software. It was designed for software developers that need to keep track of what they write and delete while they develop their software; and also to collaborate while doing this. Git is a tool that is somehow complementary to a backup, it keeps track of changes to specific files on a project-wise schedule.\nBy tracking the modifications to a file, Git assigns exact authorship to each line of such file. So Git, plus its online hub Github allows you to publish, update and track any modification (and authorship of those modifications) of files, online and in an open way. This features make Git a great tool for open but controlled collaboration.\nSince the source code of programs is indeed text, Git works perfectly also for writing books (and blog, websites, manual etc.), as long as they are written in plain text formats, such as markdown.\n 2.3 Putting it together: Books, authorship and contributions A combination of Markdown (universal source) and Github (publish, author, track and collaborate) is great for publishing open source books. Many academics such as Hadley Wickham are already using it.\n2.3.1 Authorship and contributions We academics care a great deal that our work gets accredited to us, and only because we are proud of it: this is very important for us in order to keep our job or to the next one. So, I would like to take one of Hadley Wickham’s books as example to discuss authorship and contributions.\nAs you can see, this book is tracked on Github. Github does not only tracks and keeps records of any file that constitute the book, it also keeps records of the authorship of every line of those files. As you can see, Hadley Wickham authored most of the book himself, but many other people provided small contribution. For every contributor, you can tell exactly what they wrote or deleted in the various files that constitute the source for that book. What you can’t see is that each of these contribution had to be approved from the main author.\nSo, a combination of markdown and Github allows you to self publish your own books. Moreover, this system provides strong authoring tools: anybody can propose changes / contributions to your book, and every contribution must be approved by you (or by any of the authors that have such privilege).\nBe aware, since your book now is an open source project, it can be forked\n  2.4 Bonus: Bookdown An experienced user can rely on its own skills to convert all the markdown files that constitute a book into a nicely formatted web page, the good news is that we don’t have to do this by ourself: instead we can use Bookdown\nBookdown is an R package that renders markdown books into HTML pages and many other formats. Bookdown’s manual is written in Bookdown itself, so you can peek how the rendering looks like. Since Bookdown is written in R, it is most widely known to the R community. Indeed most of the book written in Bookdown are about R, but they don’t need to, using Bookdown requires very little knowledge of R.\nAnother powerful tool is Gitbook, it was used to author this collection of technical books\n  3 Publishing Open source books can be published in many ways, often one way does not exclude the others.\n3.1 Own website Markdown and Pandoc provide an HTML output, so your book can be easily integrated into any website, manually or automatically. For example, travis-ci can build your book automatically from Github and push it to your website; but I have not checked the details of how to do this, and setting this up might not be easy.\nIn this way, you fully control the copyright and the license to your book (although it is reasonable to use Github together with open source or share-alike licenses).\n 3.2 Rstudio connect, through Bookdown Bookdown provides an integrated system to publish your book through Rstudio connect to its website. This is detailed on the “Publishing” chapter of bookdown’s manual together with other extensive information on publishing.\n 3.3 Publishers It is also possible to sell open source books through publishers. Among those Leanpub does a good job, I personally purchased books there. Leanpub accepts to sell open source books written in markdown directly from Github. Their publishing process is fast; indeed they accept to distribute your book in real time while you write it, providing updates at anytime to the customers.\nMost of the books on Leanpub are about programming, but it does not have to be like this, we could publish there books on biology, or about any of your fields of interest.\nIf your open source book is incredibly good, you can also sell printed versions through traditional publishers. Indeed Hadley Wickham sells his books through Chapman \u0026amp; Hall.\n  4 Impact A small note: I haven’t written or published an open source book yet; I wrote this section starting from my personal observations and experience while studying and working in academia in the last years.\n4.1 Paywall We scientists often complain about how people don’t rely on the knowledge that we produce during years. But how much of this knowledge is locked behind a paywall that has questionable reasons to exist? Writing open source books, at least while we are funded with public money, could have an ethical side.\nWhat about the practical side? We academics do not earn huge amounts of money for writing books that are often sold at high prices. If we would distribute open source books instead, we would not lose much. And we could gain on impact: an open source book can be accessed worldwide, and it could be also easily translated.\nBeside, remember that open source books can always be sold through Leanpub.\n 4.2 Updates and crowdsourcing Imagine the impact of a book that can be freely:\n accessed online downloaded on a e-reader printed  And that can also be updated in real time. When we specialize we sometimes feel that books gets useless because they quickly become obsolete. Well, open source books do not.\nMoreover they are less of a burden on the author, because readers can contribute to the book and improve it, from fixing typos to writing whole sections. For example, the author of Bookdown, (Yihui Xie), is also writing an R package to make website (that, by the way, I am using to make this blog). The manual for this new package is being written with Bookdown and many people are already contributing to it.\nWhat better peer review than the readers themselves?\n  5 Wrapping it up and what’s next Markdown and Github are powerful tools to publish open source books. Markdown books can be easily compiled to very nicely formatted HTML books using packages such as Bookdown. Github enables open but controlled collaboration and provides strong authorship tools.\nWith this system we could publish beginner-level books or also short high level reference books on the our topics of interest. Our readers could be University students or any person that want to learn such topics.\nIf academics would engage in this activity they could have a great impact on society.\nI don’t know if I am expert enough to write an open source book on any of my area of interest. But it sounds like a good long term project and I look forward to do it. The tools are all there.\n ","date":1500163200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1500163200,"objectID":"3c2b1045eb394f9c12d63e1810b3539b","permalink":"https://otho.netlify.com/post/2017-07-16-back-to-the-books/","publishdate":"2017-07-16T00:00:00Z","relpermalink":"/post/2017-07-16-back-to-the-books/","section":"post","summary":"During my PhD I was struggling to learn new skills, then I discovered open books, available in HTML and on Github","tags":null,"title":"Back To The Books","type":"post"},{"authors":null,"categories":null,"content":"Hi, I am Otho,\nI am a plant biologist interested in genetics, data analysis and methods for making research easier and more accessible, such as open source software and hardware.\nThis is my blog, indeed about biology, open source and anything under the sun. I haven\u0026rsquo;t implemented a comment section yet. Please, if you notice any issue or typo, or if you have any suggestion feel free to send me an email at othomanteotho@gmail.com or a pull request on Github.\nSometimes I introduce small updates and fix small things in old posts. If for some wierd reason you are interested to a very specific version of a post you can check its modification history always on Github (right now this blog is generated from the \u0026ldquo;blogdown\u0026rdquo; branch of the \u0026ldquo;othomantegazza.github.io\u0026rdquo; repo, I\u0026rsquo;ll simplify this setup soon).\nI am a postdoc at CEPLAS, opinions here are my own.\nThis blog is generated with Blogdown and Hugo\n","date":1497830400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1497830400,"objectID":"6083a88ee3411b0d17ce02d738f69d47","permalink":"https://otho.netlify.com/about/","publishdate":"2017-06-19T00:00:00Z","relpermalink":"/about/","section":"","summary":"Hi, I am Otho,\nI am a plant biologist interested in genetics, data analysis and methods for making research easier and more accessible, such as open source software and hardware.\nThis is my blog, indeed about biology, open source and anything under the sun. I haven\u0026rsquo;t implemented a comment section yet. Please, if you notice any issue or typo, or if you have any suggestion feel free to send me an email at othomanteotho@gmail.","tags":null,"title":"About","type":"page"},{"authors":null,"categories":null,"content":" Can Open Source Hardware help fill the gap and bring technology within reach for everybody?\nI am a biologist in academia. I am curious about how Open Source Hardware can improve the way we do research and the way in which we distribute our results and the technology that we produce.\nDefinitions first The Open Source Hardware Association defines Open Source Hardware as:\n “hardware whose design is made publicly available so that anyone can study, modify, distribute, make, and sell the design or hardware based on that design”\n Starting from the late 90s many engineers, passionate users, companies and organization have tried to define standards for Open Source Hardware and to advertise for it, they were probably inspired by the success of Open Source Software.\n Lessons from Software A couple of decades ago, the Open Source movement made a strong statement on how the source code of commonly used software should be available to everybody.\nThis was a matter of fairness. We deal with software constantly in our life and it sounds reasonable that we know how that software works.\nBut this proved also practical. It fueled software development in the last decades and the broad start-up environment that thrived around it.\nIt is worth mentioning that sharing the source code is good enough, but many open source projects went further than that. They provided extensive and sometimes redundant documentation on how to use their product, on how to take control of it and on how to modify any aspect of it. Then, the community could redistribute the modified and improved products thanks to permissive and copyleft licenses.\nThe success of this model highlights the benefits that arise from a widespread and distributed access to knowledge for everybody.\n In Universities and in biology Through synthetic biology, open source hardware is already making its way to biology and biotechnology.\nI am trying to collect a list of projects that are related to Open Source Hardware and Biology and looking at homemade centrifuges, open PCR machines, microfluidics devices, I have the impression that this way of doing things is rapidly growing.\nAs stated above, I am interested in its role and impact on academic research, specifically in the fields of biology and plant science. (and eventually I would like to use those tools myself for my research :) )\nRedistributing knowledge By definition Open Source software and hardware are about how we distribute knowledge.\nA model that stresses the importance of openly redistributing knowledge as widely as possible and of facilitating re-use of that knowledge / technology seems only reasonable for Universities, which indeed have the role in society of generating knowledge and making it available.\nWhat I am also really curious about is to figure out if Open Source Hardware could also improve the way we do research and not exclusively the way we distribute it.\n Making research easier for academics In my (small) experience as academic researcher, one of the main issues that we, young biologists, face is that we are mostly end users of very expensive and sophisticated machines and technologies.\nIn this way, we can perform very complex tasks and experiments with relatively little effort, but we also partially lose control on what we are doing.\nIn details, this might cause that:\n Laboratories depend more and more on high level funding; low funded labs get left behind, which could be an issue on the global scale. Since the end user model is productive in the short term, laboratories that try different approaches, again, might get left behind, This relegates researchers to a performer / technical position, in which they are required to perform a high number of repetitive tasks with little chances to modify the workflows of their experiments. If researchers would gain more control on the technology that they use, they might have bigger chances of optimizing their experimental workflows. For example, making them simpler, less polluting and more accessible. This might have an effect also on reproducibility and distributed collaborative development, simply because the chances of making reproducible something on which you have no control are small.  Open Source Hardware might have a role solving those issues but since only few laboratories implement open hardware methodically I can’t be sure about it.\nBut open source software already helped biologist a lot, especially in bioinformatics and in data analysis through impressive frameworks such as, for example, BioConductor. This raises hopes that Open Source Hardware could have a similar impact for wet lab scientists.\nOf course the issue of a funding system that might encourage bad scientific behavior remains, but Open Hardware could be a move in the right direction and improve the life of young biologists.\n  An Impact on farming? As academic researcher I often wonder what will be the impact of my research.\nI am specialized in genetics and plant biology, so my research might have impact on agriculture and farming, especially in breeding new crop varieties.\nIf we, plant biologists, would apply Open Source Hardware systematically, we might, for example, improve farming by lowering the costs necessary to access technologies such as plant breeding.\nSo, can Academic Research improve its impact, down the line, on farming by adopting an open knowledge / open source software and hardware model? And also, could it help shift the role of a farmer from end user to user/developer?\nSome organizations are already investing on this model. I am moving a little bit outside of my field of expertise right here, so I might not be the best person to answer those questions; but as always, the success of Open Source Software raises hope that yes, this can happen.\nThanks to Silvia, Leone and Alessandro for the help and the ideas.\n ","date":1495756800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495756800,"objectID":"bfd733ee0badc032c8b3f05195a41475","permalink":"https://otho.netlify.com/post/2017-05-26-fill-the-gap/","publishdate":"2017-05-26T00:00:00Z","relpermalink":"/post/2017-05-26-fill-the-gap/","section":"post","summary":"Can Open Source Hardware help fill the gap and bring technology within reach for everybody?","tags":null,"title":"Fill the Gap","type":"post"},{"authors":null,"categories":null,"content":"As a young scientist, I find myself facing these challenges (or, at least, let\u0026rsquo;s say that I am trying to improve in these areas):\n make research in an interdisciplinary and distributed context, maximize the chances that anybody can access and reproduce my results, engage with the wide public.  Learning these enabling tools are helping me dealing with this:\n A programming language, easier if it is a high level one such as R or Python. Knowing a programming language not only helps you get a computer or a robot do what you want. It also allow you to write and share with everybody a rigorous set of instruction (scripts) for what you do, A markup language, such as Latex, or a combination of HTML and markdown, this enables you to easily publish what you want on the web. It can be a blog, a text book, or an extensive manual on how to interpret and use your lab results, A version control tool; Git/Github. It allows open and collaborative development of your projects,  The nice things about these tools is that they have been developed in an open source / open knowledge framework, therefore the only thing needed to learn them (besides a computer, access to the web and -OK- understanding of basic English) is time.\nThese technologies already had an impact on academic research once, with the advent of \u0026ldquo;big data\u0026rdquo;. They might have an impact again at the present day with the implementation of open hardware and open robotics.\nWhile learning those tools, I found these resources incredibly helpful :\n For the R language anything that Hadley Wickham does, The Mozilla Development Network gets you started with HTML and the web (I am still learning this) Markdown is just incredibly easy, just check the original guide or the Github Flavored Markdown guide What better place to get started with github then the Git Book itself? It\u0026rsquo;s at the same time easy and detailed.  I have not found yet the best guide for learning open hardware development.\nHave fun :)\n","date":1494892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1494892800,"objectID":"8899a9a8c51ccf9100fe7ded01cefd2b","permalink":"https://otho.netlify.com/post/2017-05-16-enabling-tools/","publishdate":"2017-05-16T00:00:00Z","relpermalink":"/post/2017-05-16-enabling-tools/","section":"post","summary":"Scientists love programming, scientists love writing","tags":null,"title":"Enabling Tools","type":"post"},{"authors":null,"categories":null,"content":" This is a collection of websites that I am keeping track of in order to get an overview of the current state of open hardware in biology.\nI\u0026rsquo;ll try to update this list regularly.\nOpentrons Opentrons is an open source/hardware robot. Its hardware, software and scripts for protocols are tracked on Github.\nGaudiLabs GaudiLabs are open labs. Their website contains a detailed list of Open Hardware projects for lab equipment, including cool stuff such as the OpenDrop.\nOpen hardware microfluidics The StreyLab developed an Open Hardware Microfluidic Controller, which is documented on their Github page and on their blog.\nMetafluidics collects open source microfluidics projects for biology.\nMicrofluidics PCR Microfluidics can help to automate and scale down the volume of PCR and qPCR, Open Hardware can have a great impact in this field.\nNot Open Hardware, but Elveflow provides a nice overview of microfluidic PCR development.\nAnd a peer reviewed paper on the topic\nManu Prakash lab The Manu Prakash lab is home of impressive frugal science.\nThey develop tools such as:\n A folding microscope, A punchcard microfuidic device, A citizen mosquito surveillance , And the paperfuge.  Looks like the last two elements haven\u0026rsquo;t gone through peer review yet.\nBio Academany Bio Academany hosts a distributed course on synthetic biology; it is expensive, (at 5000$ / year ?), but provides hands on time through Fablabs (?). The classes are hosted on Vimeo, and the website contain info on open hardware for biology.\nOpen qPCR Chaibio developed and is selling a qPCR with open source software and hardware. They are also developing the Chai Green, a freely licensed DNA binding dye.\nFarming  The Open Agriculture group at MIT and their Github page. The mighty FarmBot and, again, its Github page  Hackteria The Hacteria DIY Bio community.\nGenerics  Public Lab more oriented toward environmental science, contains great project and inspiration. Open Hardware Science Open Source hardware association  Others  Lego based liquid handling robot :) Open raman spectrometer on gitlab; more on the chemistry side, Search biology on Hackaday to get a constant feed of new projects.  Bonus ;) https://youtu.be/SGJ5cZnoodY - A Wired UK documentary on open hardware development in the city of Shenzhen.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"db235fc914867ffea6b540c8732499d5","permalink":"https://otho.netlify.com/notes/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/notes/","section":"","summary":"This is a collection of websites that I am keeping track of in order to get an overview of the current state of open hardware in biology.\nI\u0026rsquo;ll try to update this list regularly.\nOpentrons Opentrons is an open source/hardware robot. Its hardware, software and scripts for protocols are tracked on Github.\nGaudiLabs GaudiLabs are open labs. Their website contains a detailed list of Open Hardware projects for lab equipment, including cool stuff such as the OpenDrop.","tags":null,"title":"A Collection of Resources for Open Hardware in Biology","type":"page"}]